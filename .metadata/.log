!SESSION 2024-03-09 19:50:41.619 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-09 19:50:43.165
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-09 19:50:43.327
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-09 19:51:25.941
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-09 19:51:27.216
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-09 19:51:27.216
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-09 19:51:29.075
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-09 19:54:46.168 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-09 19:54:47.257
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-09 19:54:47.417
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-09 19:54:49.673
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-09 19:54:50.708
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-09 19:54:50.708
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-09 19:54:53.094
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-09 22:42:40.527 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-09 22:42:42.126
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-09 22:42:42.289
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-09 22:42:44.487
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-09 22:42:45.567
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-09 22:42:45.567
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-09 22:42:48.143
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-10 19:31:43.468 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-10 19:32:07.834
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-10 19:32:08.005
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-10 19:32:16.253
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-10 19:32:17.499
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-10 19:32:17.499
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-10 19:32:20.979
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-18 16:24:44.651 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-18 16:25:09.317
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-18 16:25:09.489
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-18 16:25:12.978
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-18 16:25:14.184
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-18 16:25:14.184
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-18 16:25:17.688
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-18 21:52:01.752 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-18 21:52:25.053
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-18 21:52:25.208
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-18 21:52:27.928
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-18 21:52:29.061
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-18 21:52:29.061
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-18 21:52:31.168
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-22 19:45:40.580 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-22 19:46:04.058
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-22 19:46:04.234
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-22 19:46:12.374
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-22 19:46:13.571
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-22 19:46:13.571
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-22 19:46:15.947
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-22 20:23:45.902 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-22 20:24:09.614
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-22 20:24:09.783
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-22 20:24:21.799
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-22 20:24:23.022
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-22 20:24:23.022
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-22 20:24:25.460
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-23 07:09:34.739 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-23 07:09:58.822
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-23 07:09:59.020
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-23 07:10:02.390
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-23 07:10:05.563
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-23 07:10:05.563
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-23 07:10:08.640
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-24 00:35:34.902 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-24 00:35:58.853
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-24 00:35:59.019
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-24 00:36:01.732
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-24 00:36:02.948
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-24 00:36:02.948
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-24 00:36:05.440
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-03-25 10:44:56.655 -----------------------------------------------
eclipse.buildId=4.30.0.20231201-1200
java.version=17.0.10
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.emf.ecore 2 0 2024-03-25 10:45:20.401
!MESSAGE Both 'org.eclipse.jst.j2ee.core' and 'org.eclipse.jst.j2ee.core' register a package for 'application.xmi'

!ENTRY ch.qos.logback.classic 1 0 2024-03-25 10:45:20.599
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2024-03-25 10:45:22.965
!MESSAGE Logback config file: C:\Users\alexp\OneDrive\Desktop\Programacion\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.2.1.20231030-1438.xml

!ENTRY org.eclipse.jface 2 0 2024-03-25 10:45:24.204
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-03-25 10:45:24.205
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-03-25 10:45:26.619
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\alexp'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-04-02 09:50:54.215 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.7
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_ES
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-04-02 09:51:25.350
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-04-02 09:51:25.350
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.mylyn.commons.ui 4 0 2024-04-02 09:51:31.336
!MESSAGE For input string: "or" under radix 16
!STACK 0
java.lang.NumberFormatException: For input string: "or" under radix 16
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at org.eclipse.mylyn.internal.commons.ui.E4ThemeColor.getRGBFromCssString(E4ThemeColor.java:57)
	at org.eclipse.mylyn.commons.ui.GradientColors.getRGBFromTheme(GradientColors.java:211)
	at org.eclipse.mylyn.commons.ui.GradientColors.getBackground(GradientColors.java:190)
	at org.eclipse.mylyn.commons.ui.GradientColors.createBorderColor(GradientColors.java:78)
	at org.eclipse.mylyn.commons.ui.GradientColors.createColors(GradientColors.java:54)
	at org.eclipse.mylyn.commons.ui.GradientColors.<init>(GradientColors.java:50)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.initResources(GradientToolTip.java:49)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.<init>(GradientToolTip.java:44)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListToolTip.<init>(TaskListToolTip.java:126)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.createActiveTaskComposite(TaskListFilteredTree.java:423)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createFilterControls(AbstractFilteredTree.java:182)
	at org.eclipse.ui.dialogs.FilteredTree.createControl(FilteredTree.java:362)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.createControl(EnhancedFilteredTree.java:61)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createControl(AbstractFilteredTree.java:92)
	at org.eclipse.ui.dialogs.FilteredTree.init(FilteredTree.java:331)
	at org.eclipse.ui.dialogs.FilteredTree.<init>(FilteredTree.java:289)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.<init>(EnhancedFilteredTree.java:48)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.<init>(AbstractFilteredTree.java:71)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.<init>(TaskListFilteredTree.java:135)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.createPartControl(TaskListView.java:591)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:952)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:395)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:322)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1344)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.egit.ui 2 0 2024-04-02 09:51:32.673
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'h:\'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.844
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.datatools.connectivity.DataSourceExplorerNavigator" id and the "Data Source Explorer" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.845
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.datatools.sqltools.plan.planView" id and the "Execution Plan" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.845
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.datatools.sqltools.result.resultView" id and the "SQL Results" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.850
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.gef.ui.palette_view" id and the "Palette" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.855
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.jpt.ui.jpaStructureView" id and the "JPA Structure" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.855
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.jpt.ui.jpaDetailsView" id and the "JPA Details" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.855
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.jst.jsf.ui.component.ComponentTreeView" id and the "JSF Component Tree" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.856
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.jst.jsf.ui.tagregistry.TagRegistryView" id and the "Tag Registry" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.856
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.jst.ws.jaxws.ui.views.AnnotationsView" id and the "Annotation Properties" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.857
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.lsp4e.operations.typeHierarchy.TypeHierarchyView" id and the "Type Hierarchy" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.858
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.lsp4e.ui.languageServersView" id and the "Language Servers" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.860
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.mylyn.commons.identity.ui.navigator.People" id and the "People" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.878
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.api.tools.ui.views.apitooling.views.apitoolingview" id and the "API Tools" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.878
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.runtime.RegistryBrowser" id and the "Plug-in Registry" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.879
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.PluginsView" id and the "Plug-ins" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.879
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.FeaturesView" id and the "Features" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.880
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.DependenciesView" id and the "Plug-in Dependencies" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.881
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.TargetPlatformState" id and the "Target Platform State" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.881
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.pde.ui.ImageBrowserView" id and the "Plug-in Image Browser" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.935
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.common.snippets.internal.ui.SnippetsView" id and the "Snippets" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.936
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.internet.monitor.view" id and the "TCP/IP Monitor" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.937
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.jsdt.callhierarchy.view" id and the "Call Hierarchy" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.937
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.jsdt.ui.SourceView" id and the "Declaration" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.937
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.jsdt.ui.JavadocView" id and the "Documentation" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.938
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.server.ui.ServersView" id and the "Servers" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.938
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.xml.ui.views.annotations.XMLAnnotationsView" id and the "Documentation" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.938
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.xml.ui.contentmodel.view" id and the "Content Model" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.939
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.xml.views.XPathView" id and the "XPath" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.939
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.xsl.jaxp.debug.ui.resultview" id and the "Result" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2024-04-02 09:51:32.940
!MESSAGE Removing PartDescriptorImpl with the "org.eclipse.wst.xsl.ui.view.outline" id and the "Stylesheet Model" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:47.896
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:189)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:100)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:421)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.jdt.ui 4 2 2024-04-02 09:53:47.897
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:189)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:100)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:421)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.jdt.ui 4 0 2024-04-02 09:53:47.901
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.initialReconcile(JavaReconcilingStrategy.java:189)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:100)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:421)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.508
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.511
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.512
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.642
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.644
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.644
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.713
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.716
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.717
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.740
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.741
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.741
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.762
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.764
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.765
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.794
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.795
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.796
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.815
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.816
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.816
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.840
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.842
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.842
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.861
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.863
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.864
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.883
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.884
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.884
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.907
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.908
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.909
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.930
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.931
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.932
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.950
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.950
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.951
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.968
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.970
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:48.992
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:48.994
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:48.995
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.014
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.015
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.016
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.036
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.037
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.039
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.057
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.058
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.058
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.078
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.079
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.080
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.105
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.106
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.107
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.128
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.129
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.129
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.152
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.153
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.153
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.171
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.172
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.173
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:49.193
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:49.194
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:49.194
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:53:51.475
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:53:51.477
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:53:51.477
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:54:11.679
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:54:11.680
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:54:11.680
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:54:18.608
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:54:18.617
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:54:18.620
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 09:54:19.141
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package misClases.avaliacion2;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

@SuppressWarnings("all")
public class CCadena {
	private int i;
<<<<<<< HEAD
	private char[] cadena = new char[40];
	
=======
	private char[] cadena = new char[80];

>>>>>>> origin/main
	private String frase;

	public void recolleCadena() {
		Scanner teclado = new Scanner(System.in);
		System.out.println("introduzca una cadena de caracteres: ");
		frase = teclado.nextLine();
		for (i = 0; i < frase.length(); i++) {
			cadena[i] = frase.charAt(i);

		}
		teclado.close();
	}

<<<<<<< HEAD
	public void amosaCadena() {
		System.out.println("los valores recogidos en la cadena letras son:");
=======
	public void recogerCadena() throws IOException {
		int i = 0;
		char letra;
		System.out.println("introduzca cadena: ");
		letra = (char) System.in.read();
		while (letra != '\r') {
			cadena[i] = letra;
			letra = (char) System.in.read();
			i++;

		}

	}

	public void amosaCadena() {
		System.out.println();
>>>>>>> origin/main
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}
	}

	public void amosaRevesCadena() {

		for (i = (cadena.length) - 1; i >= 0; i--) {
			if (cadena[i] != '\0')
				System.out.print(cadena[i]);
		}

	}

	// Método para recoger cadena al azar
	public void recolleCadenaAlAzar() {

		Random random = new Random();

		for (int i = 0; i < cadena.length; i++) {

			// Generar un carácter aleatorio entre 'a' y 'z'
			char randomChar = (char) (random.nextInt(26) + 'a');
			cadena[i] = randomChar;
		}
	}

	public void invierteCadena() {
		int i, j;
		char letra;
		i = 0;
		while (cadena[i] != '\0')
			i++;
		i--;
		j = 0;
		while (j < i) {
			letra = cadena[j];
			cadena[j] = cadena[i];
			cadena[i] = letra;
			j++;
			i--;
		}
	}

	public void capicua() {

		// Crear un nuevo array con el doble de longitud
		char[] resultado = new char[cadena.length * 2];

		// Copiar la cadena original en la primera mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, 0, cadena.length);

		// invertimos cadena con nuestro método
		invierteCadena();

		// Copiar la cadena invertida en la segunda mitad del nuevo array
		System.arraycopy(cadena, 0, resultado, cadena.length, cadena.length);

		// Actualizar la cadena original con la versión sumada
		this.cadena = resultado;

	}

	public void capicua2() {
		int j = frase.length();
		for (i = frase.length() - 1; i >= 0; i--) {
			cadena[j] = cadena[i];
			j++;

		}

	}

	public void eliminaEnCadena(char a) {
		for (i = 0; i < cadena.length; i++) {
			if (cadena[i] == a) {
				cadena[i] = '\0';
				int s = i;
				for (int j = s; j < cadena.length - 1; j++) {

					cadena[j] = cadena[s + 1];
					s++;

				}
				i--;

			}
		}
	}

	public void repiteUnha() {
		// Crear un nuevo array con el doble de longitud
		char[] letrasRepetidas = new char[cadena.length * 2];

		// Iterar sobre cada valor del array original
		for (int i = 0; i < cadena.length; i++) {
			// Obtener el valor actual
			char valor = cadena[i];

			// Repetir el valor dos veces y agregarlo al nuevo array
			letrasRepetidas[2 * i] = valor;
			letrasRepetidas[2 * i + 1] = valor;
		}

		// Actualizar el array original con la versión repetida
		this.cadena = letrasRepetidas;
	}

	public void repiteUna() {

		for (int i = frase.length() - 1; i >= 0; i--) {
			int j = i * 2 + 1;
			cadena[j] = cadena[i];
			cadena[j - 1] = cadena[i];

		}
	}

	public void eliminaPares() {
		int j = 0;

		for (i = 0; i < cadena.length; i++) {
			if (i % 2 == 0) {
				cadena[i] = '\0';

			}

		}

	}

<<<<<<< HEAD
=======
	public void duplicaCaracteres3Numeros2() {
		int i = 0;
		int contNum = 0;
		int contChar = 0;

		while (cadena[i] != '\0') {

			if ((cadena[i] >= 'A' && cadena[i] <= 'z'))
				contChar = contChar + 2;
			else if (cadena[i] >= '0' && cadena[i] <= '9')
				contNum++;
			i++;

		}
		i--;
		int j = i + contNum + contChar;

		while (i >= 0) {
			if ((cadena[i] >= 'A' && cadena[i] <= 'Z') || (cadena[i] >= 'a' && cadena[i] <= 'z')) {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				cadena[j - 2] = cadena[i];
				j = j - 2;
			} else if (cadena[i] >= '0' && cadena[i] <= '9') {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;
			} else
				cadena[j] = cadena[i];
			i--;
			j--;
		}

	}

>>>>>>> origin/main
	public void eliminaPares2() {
		int i, j;
		i = 0;
		j = 0;
		while (cadena[i] != '\0') {
			if (i % 2 != 0) {
				cadena[j] = cadena[i];
				j++;
			}
			i++;
		}
		while (j < i) {
			cadena[j] = cadena[i];
			j++;
		}
	}
<<<<<<< HEAD
	
	  public void elimina125EnCadena() {
	        //creamos un objeto stringbuffer para poder manipular la cadena
	        StringBuffer stringBuffer = new StringBuffer();

	        // Iteramos sobre la cadena original  controlando la longitud a traves del tamaño de string 
	        //y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	    }
	  
	  public void duplica125EnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (i != 1 && i != 2 && i != 5) {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	  
	  public void duplicaNumerosEnCadena() {
	        
	        StringBuffer stringBuffer = new StringBuffer();

	        
	        for (int i = 0; i < frase.length(); i++) {
	            if (cadena[i]<'0'|| cadena[i]>'9') {
	                stringBuffer.append(cadena[i]);
	            }
	            else
	            	 stringBuffer.append(cadena[i]).append(cadena[i]);
	        }

	        // Actualizamos la cadena original con la cadena modificada
	        cadena = stringBuffer.toString().toCharArray();
	        
	    }
	
	
	
	
	
	
=======

	public void elimina125EnCadena() {
		// creamos un objeto stringbuffer para poder manipular la cadena
		StringBuffer stringBuffer = new StringBuffer();

		// Iteramos sobre la cadena original controlando la longitud a traves del tamaño
		// de string
		// y añadimos solo los caracteres que no están en las posiciones 1, 2 y 5
		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			}
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();
	}

	public void duplica125EnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (i != 1 && i != 2 && i != 5) {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplicaNumerosEnCadena() {

		StringBuffer stringBuffer = new StringBuffer();

		for (int i = 0; i < frase.length(); i++) {
			if (cadena[i] < '0' || cadena[i] > '9') {
				stringBuffer.append(cadena[i]);
			} else
				stringBuffer.append(cadena[i]).append(cadena[i]);
		}

		// Actualizamos la cadena original con la cadena modificada
		cadena = stringBuffer.toString().toCharArray();

	}

	public void duplica125EnCadena2() {
		int i = frase.length(), j = i + 3;

		while (i >= 0) {
			if (i != 1 && i != 2 && i != 5)
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

	public void duplicaNumerosEnCadena2() {
		int i = 0;
		int cont = 0;
		while (cadena[i] != '\0') {
			if (cadena[i] >= '0' && cadena[i] <= '9')
				cont++;
			i++;

		}
		i--;
		int j = i + cont;

		while (i >= 0) {
			if (cadena[i] < '0' || cadena[i] > '9')
				cadena[j] = cadena[i];
			else {
				cadena[j] = cadena[i];
				cadena[j - 1] = cadena[i];
				j--;

			}
			j--;
			i--;

		}

	}

>>>>>>> origin/main
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 09:54:19.142
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 09:54:19.142
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:06:39.431
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara01 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();

		matriz.amosaMatrizA();
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosa('B');
>>>>>>> origin/main
		//Propuestos en clase
		System.out.println();
		// matrizB={{9,6,3},{7,4,1},{9,6,3}}
		matriz.copiaAenB963741963();
		System.out.println("\n");
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
		
		//matriz={{3,6,9},{3,6,9},{1,4,7}}
		System.out.println("\n");
		matriz.copiaAenB369369147();
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
	
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-04-02 10:06:39.433
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-04-02 10:06:39.434
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:06:39.479
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara01 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();

		matriz.amosaMatrizA();
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosa('B');
>>>>>>> origin/main
		//Propuestos en clase
		System.out.println();
		// matrizB={{9,6,3},{7,4,1},{9,6,3}}
		matriz.copiaAenB963741963();
		System.out.println("\n");
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
		
		//matriz={{3,6,9},{3,6,9},{1,4,7}}
		System.out.println("\n");
		matriz.copiaAenB369369147();
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
	
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 10:06:39.480
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 10:06:39.480
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:07:04.060
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara01 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();

		matriz.amosaMatrizA();
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosa('B');
>>>>>>> origin/main
		//Propuestos en clase
		System.out.println();
		// matrizB={{9,6,3},{7,4,1},{9,6,3}}
		matriz.copiaAenB963741963();
		System.out.println("\n");
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
		
		//matriz={{3,6,9},{3,6,9},{1,4,7}}
		System.out.println("\n");
		matriz.copiaAenB369369147();
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
	
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 10:07:04.062
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 10:07:04.063
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:07:11.601
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara01 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();

		matriz.amosaMatrizA();
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosa('B');

		//Propuestos en clase
		System.out.println();
		// matrizB={{9,6,3},{7,4,1},{9,6,3}}
		matriz.copiaAenB963741963();
		System.out.println("\n");

		matriz.amosaMatrizB();

		matriz.amosa('B');
>>>>>>> origin/main
		
		//matriz={{3,6,9},{3,6,9},{1,4,7}}
		System.out.println("\n");
		matriz.copiaAenB369369147();
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
	
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-04-02 10:07:11.603
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-04-02 10:07:11.604
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:07:11.652
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara01 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();

		matriz.amosaMatrizA();
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosa('B');

		//Propuestos en clase
		System.out.println();
		// matrizB={{9,6,3},{7,4,1},{9,6,3}}
		matriz.copiaAenB963741963();
		System.out.println("\n");

		matriz.amosaMatrizB();

		matriz.amosa('B');
>>>>>>> origin/main
		
		//matriz={{3,6,9},{3,6,9},{1,4,7}}
		System.out.println("\n");
		matriz.copiaAenB369369147();
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
	
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 10:07:11.653
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 10:07:11.653
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:07:13.991
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara01 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();

		matriz.amosaMatrizA();
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBcolumna1Repe();
		System.out.println("\n");
		matriz.amosa('B');

		//Propuestos en clase
		System.out.println();
		// matrizB={{9,6,3},{7,4,1},{9,6,3}}
		matriz.copiaAenB963741963();
		System.out.println("\n");

		matriz.amosaMatrizB();

		matriz.amosa('B');
>>>>>>> origin/main
		
		//matriz={{3,6,9},{3,6,9},{1,4,7}}
		System.out.println("\n");
		matriz.copiaAenB369369147();
<<<<<<< HEAD
		matriz.amosaMatrizB();
=======
		matriz.amosa('B');
>>>>>>> origin/main
	
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 10:07:13.993
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 10:07:13.994
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:08:17.356
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara08 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();
		

		matriz.amosaMatrizA();
		matriz.copiaAenBfila3Repe();
		System.out.println();
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBfila3Repe();
		System.out.println();
		matriz.amosa('B');
>>>>>>> origin/main
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2024-04-02 10:08:17.357
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2024-04-02 10:08:17.359
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:08:17.418
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara08 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();
		

		matriz.amosaMatrizA();
		matriz.copiaAenBfila3Repe();
		System.out.println();
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBfila3Repe();
		System.out.println();
		matriz.amosa('B');
>>>>>>> origin/main
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 10:08:17.419
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 10:08:17.419
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-04-02 10:08:19.163
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package preparatorios;
import misClases.avaliacion2.CMatrizCuadrada;
public class prepara08 {
	public static void main(String[] args) {
		CMatrizCuadrada matriz = new CMatrizCuadrada();
		

		matriz.amosaMatrizA();
		matriz.copiaAenBfila3Repe();
		System.out.println();
		matriz.amosaMatrizB();

		matriz.amosa('A');
		matriz.copiaAenBfila3Repe();
		System.out.println();
		matriz.amosa('B');
>>>>>>> origin/main
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-04-02 10:08:19.165
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-04-02 10:08:19.166
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
